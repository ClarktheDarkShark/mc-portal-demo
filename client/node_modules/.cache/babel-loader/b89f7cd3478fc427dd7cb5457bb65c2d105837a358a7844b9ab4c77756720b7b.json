{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatGPTLike(){const[userInput,setUserInput]=useState('');const[chatResponse,setChatResponse]=useState('');const handleSubmit=async e=>{e.preventDefault();// For now, we use a mock endpoint. Update with real AI service as needed.\nconst response=await fetch('/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({query:userInput})});const data=await response.json();setChatResponse(data.answer);};return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'2rem'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"ChatGPT-Like Assistant\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),placeholder:\"Ask me anything...\",style:{width:'400px',marginRight:'1rem'}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Response:\"}),\" \",chatResponse]})]})});}export default ChatGPTLike;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ChatGPTLike","userInput","setUserInput","chatResponse","setChatResponse","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","query","data","json","answer","ThemeProvider","theme","children","style","padding","onSubmit","type","value","onChange","target","placeholder","width","marginRight","marginTop"],"sources":["/Users/christopherclark/Library/Mobile Documents/com~apple~CloudDocs/_Chris_Docs/Coding/mc-portal-demo/client/src/pages/ChatGPTLike.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ChatGPTLike() {\n  const [userInput, setUserInput] = useState('');\n  const [chatResponse, setChatResponse] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // For now, we use a mock endpoint. Update with real AI service as needed.\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query: userInput })\n    });\n    const data = await response.json();\n    setChatResponse(data.answer);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ padding: '2rem' }}>\n        <h2>ChatGPT-Like Assistant</h2>\n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Ask me anything...\"\n            style={{ width: '400px', marginRight: '1rem' }}\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n        <div style={{ marginTop: '1rem' }}>\n          <strong>Response:</strong> {chatResponse}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default ChatGPTLike;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACQ,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAAU,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,WAAW,CAAE,CACxCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAEd,SAAU,CAAC,CAC3C,CAAC,CAAC,CACF,KAAM,CAAAe,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCb,eAAe,CAACY,IAAI,CAACE,MAAM,CAAC,CAC9B,CAAC,CAED,mBACErB,IAAA,CAACsB,aAAa,EAACC,KAAK,CAAEA,KAAM,CAAAC,QAAA,cAC1BtB,KAAA,QAAKuB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAF,QAAA,eAC9BxB,IAAA,OAAAwB,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/BtB,KAAA,SAAMyB,QAAQ,CAAEnB,YAAa,CAAAgB,QAAA,eAC3BxB,IAAA,UACE4B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEzB,SAAU,CACjB0B,QAAQ,CAAGrB,CAAC,EAAKJ,YAAY,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE,CAC9CG,WAAW,CAAC,oBAAoB,CAChCP,KAAK,CAAE,CAAEQ,KAAK,CAAE,OAAO,CAAEC,WAAW,CAAE,MAAO,CAAE,CAChD,CAAC,cACFlC,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAJ,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC/B,CAAC,cACPtB,KAAA,QAAKuB,KAAK,CAAE,CAAEU,SAAS,CAAE,MAAO,CAAE,CAAAX,QAAA,eAChCxB,IAAA,WAAAwB,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAClB,YAAY,EACrC,CAAC,EACH,CAAC,CACO,CAAC,CAEpB,CAEA,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}